
@{
    ViewBag.Title = "Book Category List";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Master
        <small>Kategori Buku</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Kategori Buku</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div id="data-list" class="box">
        <div class="box-header with-border">
            <h3 class="box-title">Kategori Buku List</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div id="grid-book-category"></div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer text-right">
            <button id="btn-add" type="button" class="btn btn-primary"><i class="fa fa-plus"></i> Tambah Baru</button>
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
    <div id="data-detail" class="box" style="display: none">
        <form name="form1">
            <div class="box-header with-border">
                <h3 class="box-title">Kategori Buku Detail</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-2 control-label">Kategori </div>
                        <div class="col-md-3">
                            <input data-bind="Category" type="text" name="Category" class="form-control" required />
                            <input data-bind="BookCategoryID" type="hidden" name="BookCategoryID" class="form-control" />
                            <input data-bind="CreatedBy" type="hidden" name="CreatedBy" class="form-control" />
                            <input data-bind="CreatedAt" type="hidden" name="CreatedAt" class="form-control" />
                            <input data-bind="ModifiedBy" type="hidden" name="ModifiedBy" class="form-control" />
                            <input data-bind="ModifiedAt" type="hidden" name="ModifiedAt" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Status</div>
                        <div class="col-md-3">
                            @*<input data-bind="Status" type="hidden" name="Status" class="form-control" />*@
                            <select name="Status" class="form-control" data-bind="Status" id="stats" required>
                                <option>--Pilih Status--</option>
                                <option value="1">Show</option>
                                <option value="0">Hide</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer text-center">
                <button id="btn-back" type="button" class="btn btn-default"><i class="fa fa-chevron-left"></i> Back</button>
                <button id="btn-save" type="button" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
            </div>
        </form>
    </div>
</section>
<!-- /.content-->
@section scripts
{
    <script>
    (function () {
        function BookCategory() {
            return {
                BookCategoryID: null,
                Category: '',
                Status: '1',
                CreatedBy: '',
                CreatedAt: '',
                ModifiedBy: '',
                ModifiedAt: '',
            }
        }

        var state = "new";

        var scope = (function () {
            return Bind({
                category: new BookCategory()
            }, {
                    "category.BookCategoryID": "[data-bind='BookCategoryID']",
                    "category.Category": "[data-bind='Category']",
                    "category.CreatedBy": "[data-bind='CreatedBy']",
                    "category.CreatedAt": "[data-bind='CreatedAt']",
                    "category.ModifiedBy": "[data-bind='ModifiedBy']",
                    "category.ModifiedAt": "[data-bind='ModifiedAt']"
            });
        }());
        var gridCategory = gridview("grid-book-category", {
            url: "/BookCategory/Paging",
            columns: [
                {
                    text: "", render: function (c) {
                        var tmpl = "<a action='view'><i class='fa fa-search'></i></a>";
                        tmpl += "<a action='edit'><i class='fa fa-edit'></i></a>";
                        tmpl += "<a action='remove'><i class='fa fa-trash'></i></a>";
                        return tmpl;
                    }
                },
                { field: "Category", text: "Kategori", sortable: true },
                { field: "Status", text: "Status", sortable: true },
                { field: "CreatedBy", text: "Dibuat Oleh", sortable: true },
                { field: "CreatedAt", text: "Dibuat Pada", sortable: true },
                { field: "ModifiedBy", text: "Diubah Oleh", sortable: true },
                { field: "ModifiedAt", text: "Diubah Pada", sortable: true }
            ],
            fieldKey: "BookCategoryID",
            view: view,
            edit: edit,
            remove: remove
        });

        $("#stats").on("change", function () {
            var a = parseInt($(this).val());
            scope.category.Status = Boolean(a);
            //console.log(scope.category);
        });

        function view(ctg) {
            var textStats = ctg.Status == true ? "1" : "0";
            scope.category = ctg;
            showDetail();
            $("#stats").val(textStats);
            $("[data-bind]").attr("disabled", true);
            $("#btn-save").hide();
        }

        function edit(ctg) {
            state = "update";
            var textStats = ctg.Status == true ? "1" : "0";
            scope.category = ctg;
            showDetail();
            $("#stats").val(textStats);
            $("[data-bind]").attr("disabled", false);
            $("[data-bind='BookCategoryID']").attr("disabled", true);
            $("#btn-save").show();
        }

        function addNew() {
            state = "new";
            scope.category = new BookCategory();
            showDetail();
            //$("#stats").val(scope.category.Status.toString());
            $("[data-bind]").attr("disabled", false);
            $("#btn-save").show();
        }

        function remove(ctg) {
            Swal.fire({
                title: "Confirmation",
                text: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonText: "YES",
                cancelButtonText: "NO",
                confirmButtonColor: "red"
            })
                .then(function (r) {
                    if (r.value) {
                        axios.post("/BookCategory/Delete", { id: ctg.BookCategoryID })
                            .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                            .then(function (res) {
                                if (res.meta.success) {
                                    Swal.fire("Success", "Delete data success", "success")
                                        .then(function (r) {
                                            gridCategory.reload();
                                        });
                                } else {
                                    Swal.fire("Error", res.meta.message, "error");
                                }
                            });
                    }
                })
        }

        function showDetail() {
            $("#data-list").fadeOut(250, function () { $("#data-detail").fadeIn(500) });
        }

        function showList() {
            $("#data-detail").fadeOut(250, function () { $("#data-list").fadeIn(500) });
        }

        function save() {
            var url = "/BookCategory/" + (state === "new" ? "Insert" : "Update");
            axios.post(url, { category: scope.category })
                .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                .then(function (res) {
                    if (res.meta.success) {
                        Swal.fire("Success", "Save data success", "success")
                            .then(function (r) {
                                showList();
                                gridCategory.reload();
                            });
                    } else {
                        Swal.fire("Error", res.meta.message, "error");
                    }
                });
        }

        $("#btn-add").click(addNew);
        $("#btn-back").click(function () { showList(); });
        $("#btn-save").click(save);
    }());
    </script>
}

