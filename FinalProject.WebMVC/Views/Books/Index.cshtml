
@{
    ViewBag.Title = "Book List";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Master
        <small>Data Buku</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Data Buku</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div id="data-list" class="box">
        <div class="box-header with-border">
            <h3 class="box-title">List Buku</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div id="grid-books"></div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer text-right">
            <button id="btn-import" type="button" class="btn btn-success"><i class="fa fa-file-excel-o"></i> Import Data</button>
            <button id="btn-add" type="button" class="btn btn-primary"><i class="fa fa-plus"></i> Tambah Baru</button>
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
    <div id="data-detail" class="box" style="display: none">
        <form name="form1">
            <div class="box-header with-border">
                <h3 class="box-title">Detail Buku</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-2 control-label">Nama Buku </div>
                        <div class="col-md-3">
                            <input data-bind="BookName" type="text" name="BookName" class="form-control" required />
                            <input data-bind="BookID" type="hidden" name="BookID" class="form-control" />
                            <input data-bind="CreatedBy" type="hidden" name="CreatedBy" class="form-control" />
                            <input data-bind="CreatedAt" type="hidden" name="CreatedAt" class="form-control" />
                            <input data-bind="ModifiedBy" type="hidden" name="ModifiedBy" class="form-control" />
                            <input data-bind="ModifiedAt" type="hidden" name="ModifiedAt" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Penulis</div>
                        <div class="col-md-3">
                            <input data-bind="Author" type="text" name="Author" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Penerbit </div>
                        <div class="col-md-3">
                            <input type="text" data-bind="Publisher" name="Publisher" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Kategori Buku </div>
                        <div class="col-md-3">
                            <div class="input-group">
                                <input data-bind="CategoryName" type="text" name="CategoryName" class="form-control" readonly />
                                <input data-bind="BookCategoryID" type="hidden" name="BookCategoryID" class="form-control" />
                                <div class="input-group-btn">
                                    <button id="btn-select-category" type="button" class="btn btn-primary"><i class="fa fa-user"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Halaman </div>
                        <div class="col-md-3">
                            <input data-bind="Pages" type="number" name="Pages" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">ISBN </div>
                        <div class="col-md-3">
                            <input data-bind="Isbn" type="text" name="Isbn" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Stok Buku </div>
                        <div class="col-md-3">
                            <input data-bind="Stock" type="number" name="Stock" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Status </div>
                        <div class="col-md-3">
                            <select name="Status" class="form-control" data-bind="Status" required>
                                <option>--Pilih Status--</option>
                                <option value="1">Show</option>
                                <option value="0">Hide</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer text-center">
                <button id="btn-back" type="button" class="btn btn-default"><i class="fa fa-chevron-left"></i> Back</button>
                <button id="btn-save" type="button" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
            </div>
        </form>
    </div>
</section>
<!-- /.content-->
<!-- Modal Dialog Book Category-->
<div id="select-category" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-body">
            <div class="box box-primary">
                <div class="box-header with-border">
                    Pilih Kategori Buku
                    <span class="close" style="color: white; opacity:1" data-dismiss="modal">&times;</span>
                </div>
                <div class="box-body">
                    <div id="grid-category"></div>
                </div>
                <div class="box-footer text-center">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <i class="fa fa-remove"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        (function () {
            function Books() {
                return {
                    BookID: null,
                    BookCategoryID: null,
                    BookName: '',
                    Author: '',
                    Publisher: '',
                    Pages: 0,
                    Isbn: '',
                    Stock: 0,
                    Status: true,
                    CreatedAt: '',
                    CreatedBy: '',
                    ModifiedAt: '',
                    ModifiedBy: '',
                }
            }

            var scope = (function () {
                return Bind({
                    book: new Books()
                }, {
                    "book.BookID": "[data-bind='BookID']",
                    "book.BookCategoryID": "[data-bind='BookCategoryID']",
                    "book.BookName": "[data-bind='BookName']",
                    "book.Author": "[data-bind='Author']",
                    "book.Publisher": "[data-bind='Publisher']",
                    "book.Pages": "[data-bind='Pages']",
                    "book.Isbn": "[data-bind='Isbn']",
                    "book.Stock": "[data-bind='Stock']",
                    "book.CreatedAt": "[data-bind='CreatedAt']",
                    "book.CreatedBy": "[data-bind='CreatedBy']",
                    "book.ModifiedAt": "[data-bind='ModifiedAt']",
                    "book.ModifiedBy": "[data-bind='ModifiedBy']"
                });
            }());

            var gridCategory = gridview("grid-category", {
                url: "/BookCategory/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = "<a action='select'><i class='fa fa-check'></i></a>";
                            return tmpl;
                        }
                    },
                    { field: "Category", text: "Kategori Buku", sortable: true },
                    { field: "Status", text: "Status", sortable: true }
                ],
                fieldKey: "BookCategoryID",
                select: function (ctg) {
                    scope.book.BookCategoryID = ctg.BookCategoryID;
                    $("[data-bind='CategoryName']").val(ctg.Category);
                    //scope.book = ctg;
                    console.log(ctg);
                    $("#select-category").modal("hide");
                },
            });

            var state = "new";

            var gridBooks = gridview("grid-books", {
                url: "/Books/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = "<a action='view'><i class='fa fa-search'></i></a>";
                            tmpl += "<a action='edit'><i class='fa fa-edit'></i></a>";
                            tmpl += "<a action='remove'><i class='fa fa-trash'></i></a>";
                            return tmpl;
                        }
                    },
                    { field: "BookName", text: "Nama Buku", sortable: true },
                    { field: "Author", text: "Penulis", sortable: true },
                    { field: "Pages", text: "Halaman", sortable: true },
                    { field: "Isbn", text: "ISBN", sortable: true },
                    { field: "Stock", text: "Stok", sortable: true },
                    { field: "Status", text: "Status", sortable: true },
                    { field: "CreatedBy", text: "Dibuat Oleh", sortable: true },
                    { field: "CreatedAt", text: "Dibuat Pada", sortable: true },
                    { field: "ModifiedBy", text: "Diubah Oleh", sortable: true },
                    { field: "ModifiedAt", text: "Diubah Pada", sortable: true }
                ],
                fieldKey: "BookID",
                view: view,
                edit: edit,
                remove: remove
            });

            $("[data-bind='Status']").on("change", function () {
                var a = parseInt($(this).val());
                scope.book.Status = Boolean(a);
                //console.log(scope.category);
            });

            function view(bok) {
                var textStats = bok.Status == true ? "1" : "0";
                scope.book = bok;
                showDetail();
                $("[data-bind='Status']").val(textStats);
                $("[data-bind]").attr("disabled", true);
                $("#btn-save").hide();
            }

            function edit(bok) {
                state = "update";
                var textStats = bok.Status == true ? "1" : "0";
                scope.book = bok;
                showDetail();
                $("[data-bind='Status']").val(textStats);
                $("[data-bind]").attr("disabled", false);
                $("[data-bind='BookID']").attr("disabled", true);
                $("#btn-save").show();
            }

            function addNew() {
                state = "new";
                scope.book = new Books();
                showDetail();
                //$("#stats").val(scope.category.Status.toString());
                $("[data-bind]").attr("disabled", false);
                $("#btn-save").show();
            }

            function remove(bok) {
                Swal.fire({
                    title: "Confirmation",
                    text: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonText: "YES",
                    cancelButtonText: "NO",
                    confirmButtonColor: "red"
                })
                    .then(function (r) {
                        if (r.value) {
                            axios.post("/Books/Delete", { id: bok.BookID })
                                .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                                .then(function (res) {
                                    if (res.meta.success) {
                                        Swal.fire("Success", "Delete data success", "success")
                                            .then(function (r) {
                                                gridBooks.reload();
                                            });
                                    } else {
                                        Swal.fire("Error", res.meta.message, "error");
                                    }
                                });
                        }
                    })
            }

            function showDetail() {
                $("#data-list").fadeOut(250, function () { $("#data-detail").fadeIn(500) });
            }

            function showList() {
                $("#data-detail").fadeOut(250, function () { $("#data-list").fadeIn(500) });
            }

            function save() {
                var url = "/Books/" + (state === "new" ? "Insert" : "Update");
                axios.post(url, { book: scope.book })
                    .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                    .then(function (res) {
                        if (res.meta.success) {
                            Swal.fire("Success", "Save data success", "success")
                                .then(function (r) {
                                    showList();
                                    gridBooks.reload();
                                });
                        } else {
                            Swal.fire("Error", res.meta.message, "error");
                        }
                    });
            }

            $("#btn-select-category").click(function () { $("#select-category").modal(); });
            $("#btn-add").click(addNew);
            $("#btn-back").click(function () { showList(); });
            $("#btn-save").click(save);
        }());
    </script>
}