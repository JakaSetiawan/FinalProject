
@{
    ViewBag.Title = "Issue Book";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Transaksi
        <small>Peminjaman</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Transaksi Peminjaman</li>
    </ol>
</section><!-- Main content -->
<section class="content">
    <div id="data-list" class="box">
        <div class="box-header with-border">
            <h3 class="box-title">List Peminjaman Buku</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div id="grid-issuebook"></div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer text-right">
            <button id="btn-add" type="button" class="btn btn-primary"><i class="fa fa-plus"></i> Tambah Baru</button>
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
    <div id="data-detail" class="box" style="display: none">
        <form name="form1">
            <div class="box-header with-border">
                <h3 class="box-title">Input Peminjaman</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-2 control-label">Nama Siswa </div>
                        <div class="col-md-3">
                            <input data-bind="IssueBookID" type="hidden" name="IssueBookID" class="form-control" />
                            <div class="input-group">
                                <input data-bind="StudentName" type="text" name="StudentName" class="form-control" readonly />
                                <input data-bind="StudentID" type="hidden" name="StudentID" class="form-control" />
                                <div class="input-group-btn">
                                    <button id="btn-select-student" type="button" class="btn btn-primary"><i class="fa fa-user"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 control-label">Buku </div>
                        <div class="col-md-3">
                            <div class="input-group">
                                <input data-bind="BookName" type="text" name="BookName" class="form-control" readonly />
                                <input data-bind="BookID" type="hidden" name="BookID" class="form-control" />
                                <div class="input-group-btn">
                                    <button id="btn-select-book" type="button" class="btn btn-primary"><i class="fa fa-book"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Tanggal Peminjaman </div>
                        <div class="col-md-3">
                            <input type="text" data-bind="IssueDate" name="IssueDate" class="form-control" readonly />
                        </div>
                        <div class="col-md-2 control-label">Tanggal Pengembalian </div>
                        <div class="col-md-3">
                            <input data-bind="RetunDate" type="text" name="RetunDate" class="form-control" readonly />
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer text-center">
                <button id="btn-back" type="button" class="btn btn-default"><i class="fa fa-chevron-left"></i> Kembali</button>
                <button id="btn-save" type="button" class="btn btn-primary"><i class="fa fa-save"></i> Simpan</button>
            </div>
        </form>
    </div>
    <div id="data-view" class="box" style="display: none">
        <div class="box-header with-border">
            <h3 class="box-title">Detail Peminjaman</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <table class="table table-striped">
                <tr>
                    <td>ID Transaksi</td>
                    <td>:</td>
                    <td id="IssueBookID">111</td>
                </tr>
                <tr>
                    <td>Nama Siswa</td>
                    <td>:</td>
                    <td id="StudentName">111</td>
                </tr>
                <tr>
                    <td>Nama Buku</td>
                    <td>:</td>
                    <td id="BookName">111</td>
                </tr>
                <tr>
                    <td>Tanggal Peminjaman</td>
                    <td>:</td>
                    <td id="IssueDate">111</td>
                </tr>
                <tr>
                    <td>Tanggal Pengembalian</td>
                    <td>:</td>
                    <td id="ReturnDate">111</td>
                </tr>
                <tr>
                    <td>Status</td>
                    <td>:</td>
                    <td id="Status">Belum Dikembalikan</td>
                </tr>
            </table>
        </div>
        <div class="box-footer text-center">
            <button id="btn-back-v" type="button" class="btn btn-default"><i class="fa fa-chevron-left"></i> Kembali</button>
            <button id="btn-return" type="button" class="btn btn-success"><i class="fa fa-retweet"></i> Proses Kembalikan</button>
        </div>
    </div>
</section>
<!-- /.content-->
<!-- Modal Dialog Students & Book -->
<div id="select-dialog" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-body">
            <div class="box box-primary">
                <div class="box-header with-border">
                    Pilih Buku
                    <span class="close" style="color: white; opacity:1" data-dismiss="modal">&times;</span>
                </div>
                <div class="box-body">
                    <div id="grid-book"></div>
                    <div id="grid-student"></div>
                </div>
                <div class="box-footer text-center">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <i class="fa fa-remove"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal Dialog Return Book -->
<div id="return-dialog" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-body">
            <div class="box box-primary">
                <form name="form2">
                    <div class="box-header with-border">
                        <h3 class="box-title">Kembalikan Buku</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <label for="IssueBookID1">ID Transaksi </label>
                            <input type="text" name="IssueBookID" data-bind="Issue-BookID" id="IssueBookID1" class="form-control" readonly />
                        </div>
                        <div class="form-group">
                            <label for="ReturnDate1">Tanggal Pengembalian </label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="date" class="form-control pull-right" id="ReturnDate1" data-bind="Return-Date" name="ReturnDate1">
                                <input type="hidden" data-bind="IssueDate1" class="form-control" id="IssueDate1" name="IssueDate1">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="DayElaps">Lama Peminjaman </label>
                            <div class="input-group">
                                <input type="text" data-bind="Day-Elaps" name="DayElaps" id="DayElaps" class="form-control" readonly />
                                <div class="input-group-addon">
                                    Hari
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="isFine">Kondisi Buku </label>
                            <div class="input-group">
                                <label class="radio-inline">
                                    <input type="radio" name="isFine" id="isFine1" value="true"> Baik
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="isFine" id="isFine2" value="false"> Tidak Baik
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Penalty">Denda </label>
                            <div class="input-group">
                                <div class="input-group-addon">
                                    Rp.
                                </div>
                                <input type="text" name="Penalty" id="Penalty" class="form-control" readonly />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="desc">Deskripsi </label>
                            <textarea class="form-control" name="descriptions" id="descriptions" rows="3" maxlength="300"></textarea>
                        </div>
                    </div>
                    <div class="box-footer text-center">
                        <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-remove"></i> Close</button>
                        <button id="btn-proccess" type="button" class="btn btn-primary"><i class="fa fa-save"></i> Proses</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        (function () {
            Date.prototype.addDays = function (d) {
                this.setDate(this.getDate() + d);
                return this;
            };

            const currentDate = new Date();
            const returnDate = new Date().addDays(@ViewData["DateLength"]);

            function IssueBook() {
                return {
                    IssueBookID: null,
                    StudentID: null,
                    UserID: null,
                    BookID: null,
                    IssueDate: currentDate.toJSON(),
                    ReturnDate: returnDate.toJSON(),
                    Status: true,
                }
            }
            function ReturnBook() {
                return {
                    ReturnBookID: null,
                    IssueBookID: null,
                    ReturnDate: "",
                    DayElaps: 0,
                    isFine: null,
                    Description: "",
                    CreatedBy: "",
                }
            }

            var scope = (function () {
                return Bind({
                    issuebook: new IssueBook()
                }, {
                    "issuebook.StudentID": "[data-bind='StudentID']",
                    "issuebook.BookID": "[data-bind='BookID']"
                });
            }());
            var scope1 = (function () {
                return Bind({
                    returnbook: new ReturnBook()
                }, {
                    "returnbook.IssueBookID": "[data-bind='Issue-BookID']",
                    "returnbook.ReturnDate": "[data-bind='Return-Date']",
                    "returnbook.DayElaps": "[data-bind='Day-Elaps']"
                });
            }());

            var state = "new";
            const charge = @ViewData["LateCharge"];
            const isslength = @ViewData["DateLength"];

            var gridIssueBook = gridview("grid-issuebook", {
                url: "/IssueBook/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = "<a action='view' class='btn btn-sm btn-primary'><i class='fa fa-list-alt'></i> Kembalikan</a>";
                            return tmpl;
                        }
                    },
                    { field: "StudentName", text: "Nama Siswa", sortable: true },
                    { field: "BookName", text: "Nama Buku", sortable: true },
                    {
                        render: function (c) {
                            return convertStringToDate(c.IssueDate).toDateString();
                        },
                        text: "Tanggal Peminjaman",
                        sortable: true
                    },
                    {
                        render: function (c) {
                            return convertStringToDate(c.ReturnDate).toDateString();
                        },
                        text: "Tanggal Pengembalian",
                        sortable: true
                    },
                    {
                        render: function (c) {
                            return c.Status ? "Sudah Dikembalikan" : "Belum Dikembalikan";
                        },
                        text: "Status",
                        sortable: true
                    }
                ],
                fieldKey: "IssueBookID",
                view: view
            });

            var gridStudent = gridview("grid-student", {
                url: "/Students/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = "<a action='select'><i class='fa fa-check'></i></a>";
                            return tmpl;
                        }
                    },
                    { field: "FullName", text: "Nama Siswa", sortable: true },
                    { field: "Gender", text: "Jenis Kelamin", sortable: true },
                    { field: "DateOfBirth", text: "Tanggal Lahir", sortable: true },
                    { field: "Class", text: "Kelas", sortable: true }
                ],
                fieldKey: "StudentId",
                select: function (std) {
                    scope.issuebook.StudentID = std.StudentID;
                    $("[data-bind='StudentName']").val(std.FullName);
                    $("#select-dialog").modal("hide");
                },
            });

            var gridBook = gridview("grid-book", {
                url: "/Books/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = c.Stock > 0 && c.Status == true ? "<a action='select'><i class='fa fa-check'></i></a>" : "<a href='#'><i class='fa fa-times'></i></a>";
                            return tmpl;
                        }
                    },
                    { field: "Isbn", text: "ISBN", sortable: true },
                    { field: "BookName", text: "Nama Buku", sortable: true },
                    { field: "Author", text: "Penulis", sortable: true },
                    { field: "Publisher", text: "Penerbit", sortable: true },
                    { field: "Stock", text: "Stok Buku", sortable: true }
                ],
                fieldKey: "BookID",
                select: function (bok) {
                    console.log(bok.BookID);
                    scope.issuebook.BookID = bok.BookID;
                    $("[data-bind='BookName']").val(bok.BookName);
                    $("#select-dialog").modal("hide");
                },
            });

            function addNew() {
                //state = "new";
                scope.issuebook = new IssueBook();
                console.log(scope);
                showDetail();
                $("#btn-save").show();
            }
            function view(issuebook) {
                const stats = issuebook.Status == true ? "Belum Dikembalikan" : "Sudah Dikembalikan";

                console.log(issuebook);
                if (!issuebook.Status) {
                    $("#btn-return").hide();
                } else {
                    $("#btn-return").show();
                }
                $("#IssueBookID").text(issuebook.IssueBookID.toUpperCase());
                $("#StudentName").text(issuebook.StudentName);
                $("#BookName").text(issuebook.BookName);
                $("#IssueDate").text(convertStringToDate(issuebook.IssueDate).toDateString());
                $("#ReturnDate").text(convertStringToDate(issuebook.ReturnDate).toDateString());
                $("#Status").text(stats);

                $("#IssueBookID1").val(issuebook.IssueBookID);
                $("#IssueDate1").val(issuebook.IssueDate);
                $("#data-list").fadeOut(250, function () { $("#data-view").fadeIn(500) });
            }
            function showDetail() {
                $("#data-list").fadeOut(250, function () { $("#data-detail").fadeIn(500) });
            }
            function showList(state) {
                if (state == "detail") {
                    $("#data-detail").fadeOut(250, function () { $("#data-list").fadeIn(500) });
                } else if (state == "view") {
                    $("#data-view").fadeOut(250, function () { $("#data-list").fadeIn(500) });
                }
            }
            function save() {
                var url = "/IssueBook/" + (state === "new" ? "Insert" : "Update");
                axios.post(url, { issuebook: scope.issuebook })
                    .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                    .then(function (res) {
                        if (res.meta.success) {
                            Swal.fire("Success", "Save data success", "success")
                                .then(function (r) {
                                    showList();
                                    gridIssueBook.reload();
                                });
                        } else {
                            Swal.fire("Error", res.meta.message, "error");
                        }
                    });
            }
            function proccess() {
                state = "return";
                var url = "/IssueBook/" + (state === "new" ? "Insert" : "ProccessReturnBook");
                var retbook = new ReturnBook();

                retbook.IssueBookID = $("#IssueBookID1").val();
                retbook.DayElaps = $("#DayElaps").val();
                retbook.ReturnDate = convertStringToDate($("#ReturnDate1").val()).toJSON();
                retbook.isFine = $("[name='isFine']:checked").val() == "true" ? true : false;
                retbook.Description = $("#descriptions").val();
                //console.log(returnbook);

                axios.post(url, { returnbook: retbook })
                    .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                    .then(function (res) {
                        if (res.meta.success) {
                            Swal.fire("Success", "Proses Pengembalian Berhasil", "success")
                                .then(function (r) {
                                    showList();
                                    gridIssueBook.reload();
                                });
                        } else {
                            Swal.fire("Error", res.meta.message, "error");
                        }
                    })
            }
            function retconfirm(issuebook) {
                console.log(scope.issuebook);
                $("#return-dialog").modal();
            }

            $("#btn-add").click(addNew);
            $("#btn-back").click(function () { showList("detail"); });
            $("#btn-back-v").click(function () { showList("view"); });
            $("#btn-save").click(save);
            $("#btn-return").click(retconfirm);
            $("#btn-proccess").click(proccess);

            $("#ReturnDate1").on("change", function () {
                var IssDat = convertStringToDate($("#IssueDate1").val());
                var RetDate = convertStringToDate($(this).val());
                let DayCount = countDays(RetDate, IssDat);
                let LateCharge = DayCount > 10 ? (charge * (DayCount - isslength)) : 0;

                $("#DayElaps").val(DayCount);
                $("#Penalty").val(LateCharge);
                console.log(countDays(RetDate, IssDat));
            });
            $("#btn-select-student").click(function () {
                $("#grid-book").hide();
                $("#grid-student").show();
                $("#select-dialog").find('.box-header').text("Pilih Siswa");
                $("#select-dialog").modal();
            });
            $("#btn-select-book").click(function () {
                $("#grid-student").hide();
                $("#grid-book").show();
                $("#select-dialog").find('.box-header').text("Pilih Buku");
                $("#select-dialog").modal();
            });

            $("[data-bind='IssueDate']").val(currentDate.toDateString());
            $("[data-bind='RetunDate']").val(returnDate.toDateString());
        }());
    </script>
}