
@{
    ViewBag.Title = "Students List";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Master
        <small>Data Siswa</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Data Siswa</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div id="data-list" class="box">
        <div class="box-header with-border">
            <h3 class="box-title">List Siswa</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div id="grid-students"></div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer text-right">
            <button id="btn-add" type="button" class="btn btn-primary"><i class="fa fa-plus"></i> Tambah Baru</button>
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
    <div id="data-detail" class="box" style="display: none">
        <form name="form1">
            <div class="box-header with-border">
                <h3 class="box-title">Detail Siswa</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-2 control-label">Nama Siswa </div>
                        <div class="col-md-3">
                            <input data-bind="FullName" type="text" name="FullName" class="form-control" required />
                            <input data-bind="StudentID" type="hidden" name="StudentID" class="form-control" />
                            <input data-bind="CreatedBy" type="hidden" name="CreatedBy" class="form-control" />
                            <input data-bind="CreatedAt" type="hidden" name="CreatedAt" class="form-control" />
                            <input data-bind="ModifiedBy" type="hidden" name="ModifiedBy" class="form-control" />
                            <input data-bind="ModifiedAt" type="hidden" name="ModifiedAt" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Jenis Kelamin</div>
                        <div class="col-md-3">
                            <select name="Gender" class="form-control" data-bind='Gender' required>
                                <option>--Pilih Jenis Kelamin--</option>
                                <option value="Laki-Laki">Laki-Laki</option>
                                <option value="Perempuan">Perempuan</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Tanggal Lahir </div>
                        <div class="col-md-3">
                            <input type="date" data-bind="DateOfBirth" name="DateOfBirth" class="form-control" />
                        </div>
                        <div class="col-md-2 control-label">Kelas </div>
                        <div class="col-md-3">
                            <input data-bind="Class" type="text" name="Class" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Nomor Telepon </div>
                        <div class="col-md-3">
                            <input data-bind="PhoneNumber" type="tel" name="PhoneNumber" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer text-center">
                <button id="btn-back" type="button" class="btn btn-default"><i class="fa fa-chevron-left"></i> Back</button>
                <button id="btn-save" type="button" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
            </div>
        </form>
    </div>
</section>
<!-- /.content-->
@section scripts
{
    <script>
        (function () {
            function Student() {
                return {
                    StudentID: null,
                    FullName: '',
                    Gender: '',
                    DateOfBirth: '',
                    Class: '',
                    PhoneNumber: '',
                    CreatedAt: '',
                    CreatedBy: '',
                    ModifiedAt: '',
                    ModifiedBy: '',
                }
            }
            var scope = (function () {
                return Bind({
                    student: new Student()
                }, {
                        "student.StudentID": "[data-bind='StudentID']",
                        "student.FullName": "[data-bind='FullName']",
                        //"student.Gender": "[data-bind='Gender']",
                        "student.DateOfBirth": "[data-bind='DateOfBirth']",
                        "student.Class": "[data-bind='Class']",
                        "student.PhoneNumber": "[data-bind='PhoneNumber']",
                        "student.CreatedAt": "[data-bind='CreatedAt']",
                        "student.CreatedBy": "[data-bind='CreatedBy']",
                        "student.ModifiedAt": "[data-bind='ModifiedAt']",
                        "student.ModifiedBy": "[data-bind='ModifiedBy']"
                    });
            }());
            var gridStudent = gridview("grid-students", {
                url: "/Students/Paging",
                columns: [
                    {
                        text: "", render: function (c) {
                            var tmpl = "<a action='print'><i class='fa fa-id-card-o'></i></a>";
                            tmpl = "<a action='view'><i class='fa fa-search'></i></a>";
                            tmpl += "<a action='edit'><i class='fa fa-edit'></i></a>";
                            tmpl += "<a action='remove'><i class='fa fa-trash'></i></a>";
                            return tmpl;
                        }
                    },
                    { field: "FullName", text: "Nama Lengkap", sortable: true },
                    { field: "Gender", text: "Jenis Kelamin", sortable: true },
                    { field: "DateOfBirth", text: "Tanggal Lahir", sortable: true },
                    { field: "Class", text: "Kelas", sortable: true },
                    { field: "PhoneNumber", text: "No.Telp", sortable: true },
                    { field: "CreatedBy", text: "Dibuat Oleh", sortable: true },
                    { field: "CreatedAt", text: "Dibuat Pada", sortable: true },
                    { field: "ModifiedBy", text: "Diubah Oleh", sortable: true },
                    { field: "ModifiedAt", text: "Diubah Pada", sortable: true }
                ],
                fieldKey: "StudentID",
                print: print,
                view: view,
                edit: edit,
                remove: remove
            });

            $("[data-bind='Gender']").on("change", function () {
                scope.student.Gender = $(this).val();
            });

            var state = "new";

            function print(std) {
                console.log(std);
            }

            function view(std) {
                scope.student = std;
                showDetail();
                $("[data-bind='Gender']").val(std.Gender);
                $("[data-bind]").attr("disabled", true);
                $("#btn-save").hide();
            }

            function edit(std) {
                state = "update";
                scope.student = std;
                showDetail();
                $("[data-bind='Gender']").val(std.Gender);
                $("[data-bind]").attr("disabled", false);
                $("[data-bind='StudentID']").attr("disabled", true);
                $("#btn-save").show();
            }

            function addNew() {
                state = "new";
                scope.student = new Student();
                showDetail();
                $("[data-bind='Gender']").val("--Pilih Jenis Kelamin--");
                $("[data-bind]").attr("disabled", false);
                $("#btn-save").show();
            }

            function remove(std) {
                Swal.fire({
                    title: "Confirmation",
                    text: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonText: "YES",
                    cancelButtonText: "NO",
                    confirmButtonColor: "red"
                })
                    .then(function (r) {
                        if (r.value) {
                            axios.post("/Students/Delete", { id: std.StudentID })
                                .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                                .then(function (res) {
                                    if (res.meta.success) {
                                        Swal.fire("Success", "Delete data success", "success")
                                            .then(function (r) {
                                                gridStudent.reload();
                                            });
                                    } else {
                                        Swal.fire("Error", res.meta.message, "error");
                                    }
                                });
                        }
                    })
            }

            function showDetail() {
                $("#data-list").fadeOut(250, function () { $("#data-detail").fadeIn(500) });
            }

            function showList() {
                $("#data-detail").fadeOut(250, function () { $("#data-list").fadeIn(500) });
            }

            function save() {
                var url = "/Students/" + (state === "new" ? "Insert" : "Update");
                axios.post(url, { student: scope.student })
                    .then(function (res) { return res.data; }, function (err) { console.log("Err: ", er); })
                    .then(function (res) {
                        if (res.meta.success) {
                            Swal.fire("Success", "Save data success", "success")
                                .then(function (r) {
                                    showList();
                                    gridStudent.reload();
                                });
                        } else {
                            Swal.fire("Error", res.meta.message, "error");
                        }
                    });
            }

            $("#btn-add").click(addNew);
            $("#btn-back").click(function () { showList(); });
            $("#btn-save").click(save);
        }());
    </script>
}